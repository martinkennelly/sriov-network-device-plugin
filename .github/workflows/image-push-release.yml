name: "Push images on release"
on:
  push:
    tags:
      - v*
jobs:
  build-and-push-amd64-device-plugin:
    if: github.repository_owner == 'k8snetworkplumbingwg'
    name: Image push AMD64
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE_NAME }}
          tag-latest: false

      - name: Build and push sriov-network-device-plugin
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
            ${{ steps.docker_meta.outputs.tags }}-amd64
            ${{ env.IMAGE_NAME }}:stable-amd64
          file: images/Dockerfile

  build-and-push-arm64-device-plugin:
    if: github.repository_owner == 'k8snetworkplumbingwg'
    name: Image push ARM64
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE_NAME }}
          tag-latest: false

      - name: Build and push sriov-network-device-plugin
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ steps.docker_meta.outputs.tags }}-arm64
            ${{ env.IMAGE_NAME }}:stable-arm64
          file: images/Dockerfile.arm64


  build-and-push-ppc64le-device-plugin:
    if: github.repository_owner == 'k8snetworkplumbingwg'
    name: Image push ppc64le
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE_NAME }}
          tag-latest: false

      - name: Build and push sriov-network-device-plugin
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ steps.docker_meta.outputs.tags }}-ppc64le
            ${{ env.IMAGE_NAME }}:stable-ppc64le
          file: images/Dockerfile.ppc64le
